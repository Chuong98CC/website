// Card renderer utility for dynamic card generation

// Factory function for creating course data with consistent structure
function createCourse(id, name, subtitle, emoji, gradientStart, gradientEnd, targetColor, targetText, objectiveText, readingText, speakingText, writingText, targetScoreText) {
    return {
        id,
        name,
        subtitle,
        emoji,
        gradientStart,
        gradientEnd,
        targetTitle: "D√†nh cho:",
        targetText,
        targetColor,
        objectiveTitle: objectiveText.includes("M·ª•c ti√™u") ? "M·ª•c ti√™u:" : "Y√™u c·∫ßu:",
        objectiveText,
        objectiveColor: targetColor,
        readingTitle: "üìö Reading & Listening",
        readingText,
        readingColor: targetColor,
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText,
        speakingColor: targetColor,
        writingTitle: "‚úçÔ∏è Writing",
        writingText,
        writingColor: targetColor,
        targetScoreTitle: "üéØ Target",
        targetScoreText,
        targetScoreColor: targetColor
    };
}

// Factory functions for creating teacher and staff data
function createTeacher(name, title, description, imageUrl, role, gradientStart, gradientEnd, tags, starsCount = 5) {
    return {
        name,
        title,
        description,
        imageUrl,
        role,
        gradientStart,
        gradientEnd,
        stars: Array(starsCount).fill(1),
        tags
    };
}

function createStaff(name, title, description, imageUrl, role, gradientStart, gradientEnd, tags, starsCount = 5) {
    return {
        name,
        title,
        description,
        imageUrl,
        role,
        gradientStart,
        gradientEnd,
        stars: Array(starsCount).fill(1),
        tags
    };
}

// Utility functions
const Utils = {
    generateStars: (count) => Array(count).fill(1),
    createTag: (text, color = "blue") => typeof text === 'string' ? { text, color } : text
};

class CardRenderer {
    constructor() {
        this.templates = {};
    }

    // Load template from HTML file
    async loadTemplate(templateName, templatePath) {
        try {
            const response = await fetch(templatePath);
            const html = await response.text();
            this.templates[templateName] = html;
            return html;
        } catch (error) {
            console.error(`Error loading template ${templateName}:`, error);
            return null;
        }
    }

    // Render template with data
    render(templateName, data) {
        const template = this.templates[templateName];
        if (!template) {
            console.error(`Template ${templateName} not found`);
            return '';
        }

        let rendered = template;
        
        // Replace simple variables
        Object.keys(data).forEach(key => {
            if (typeof data[key] === 'string' || typeof data[key] === 'number') {
                const regex = new RegExp(`{{${key}}}`, 'g');
                rendered = rendered.replace(regex, data[key]);
            }
        });

        // Handle array data (like stars and tags)
        if (data.stars && Array.isArray(data.stars)) {
            const starsHtml = data.stars.map(() => '<span class="w-3 h-3 bg-yellow-400 rounded-full"></span>').join('');
            rendered = rendered.replace('{{#each stars}}.*?{{/each}}', starsHtml);
        }

        if (data.tags && Array.isArray(data.tags)) {
            const tagsHtml = data.tags.map(tag => {
                if (typeof tag === 'string') {
                    return `<span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-semibold">${tag}</span>`;
                } else if (typeof tag === 'object') {
                    return `<span class="bg-${tag.color}-100 text-${tag.color}-800 px-3 py-1 rounded-full text-xs font-semibold">${tag.text}</span>`;
                }
            }).join('');
            rendered = rendered.replace('{{#each tags}}.*?{{/each}}', tagsHtml);
        }

        return rendered;
    }

    // Render multiple cards
    renderCards(containerSelector, templateName, cardsData) {
        const container = document.querySelector(containerSelector);
        if (!container) {
            console.error(`Container ${containerSelector} not found`);
            return;
        }

        const cardsHtml = cardsData.map(cardData => this.render(templateName, cardData)).join('');
        container.innerHTML = cardsHtml;
    }

    // Simple string replacement for static templates
    static renderSimple(template, data) {
        let rendered = template;
        Object.keys(data).forEach(key => {
            const regex = new RegExp(`{{${key}}}`, 'g');
            rendered = rendered.replace(regex, data[key]);
        });
        return rendered;
    }
}

// Teacher data structure
const teacherData = [
    createTeacher(
        "Tram Vu",
        "Head IELTS Coach",
        "Founder of TES with 8+ years of IELTS teaching experience. IELTS 8.5 overall score. Specialized in Writing and Speaking modules with innovative teaching methods.",
        "https://images.unsplash.com/photo-1494790108755-2616c668e23d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Coach",
        "blue",
        "purple",
        [
            { text: "IELTS 8.5", color: "blue" },
            { text: "8+ Years", color: "green" },
            { text: "Writing Expert", color: "purple" }
        ]
    ),
    createTeacher(
        "Andrew Wernette",
        "Native Speaker Coach",
        "Native English speaker from USA with TESOL certification. Specialized in Speaking and Listening modules. Creates engaging and fun learning environment for students.",
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Coach",
        "green",
        "blue",
        [
            { text: "Native Speaker", color: "blue" },
            { text: "TESOL", color: "green" },
            { text: "Speaking Expert", color: "purple" }
        ]
    ),
    createTeacher(
        "Max Tran",
        "Senior IELTS Coach",
        "IELTS 8.0 scorer with 6 years of teaching experience. Expert in Reading and Listening modules. Known for analytical approach and systematic teaching methodology.",
        "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Coach",
        "indigo",
        "purple",
        [
            { text: "IELTS 8.0", color: "blue" },
            { text: "6+ Years", color: "green" },
            { text: "Reading Expert", color: "purple" }
        ]
    ),
    createTeacher(
        "Alex Nguyen",
        "IELTS Coach",
        "Young and energetic coach with IELTS 7.5 score. Specializes in motivating students and creating dynamic learning environments. Expert in all four skills with focus on practical application.",
        "https://images.unsplash.com/photo-1519345182560-3f2917c472ef?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Coach",
        "yellow",
        "orange",
        [
            { text: "IELTS 7.5", color: "blue" },
            { text: "4+ Years", color: "green" },
            { text: "All Skills", color: "purple" }
        ]
    ),
    createTeacher(
        "Katheryn Uyen Bui",
        "IELTS Buddy",
        "Support coach who provides additional practice sessions and one-on-one guidance. IELTS 7.0 scorer with excellent student rapport and mentoring skills.",
        "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Buddy",
        "pink",
        "red",
        [
            { text: "IELTS 7.0", color: "blue" },
            { text: "Mentoring", color: "green" },
            { text: "Support", color: "purple" }
        ]
    ),
    createTeacher(
        "Sarah Thompson",
        "Advanced IELTS Coach",
        "British native speaker with Cambridge CELTA certification. Specializes in advanced level students aiming for bands 7.0+. Expert in academic writing and complex grammar structures.",
        "https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Coach",
        "indigo",
        "purple",
        [
            { text: "Native Speaker", color: "blue" },
            { text: "CELTA", color: "green" },
            { text: "Advanced Level", color: "purple" }
        ]
    )
];

// Staff data structure
const staffData = [
    createStaff(
        "Chi Trang",
        "Administrative Manager",
        "Manages all administrative operations, student enrollment, scheduling, and ensures smooth daily operations. Always ready to assist students with any queries or concerns.",
        "https://images.unsplash.com/photo-1487412720507-e7ab37603c6f?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "Admin Manager",
        "emerald",
        "teal",
        [
            { text: "Administration", color: "blue" },
            { text: "Student Support", color: "green" },
            { text: "Operations", color: "purple" }
        ]
    ),
    createStaff(
        "Jaden Vo",
        "IELTS Buddy & IT Support",
        "Provides technical support for online learning platforms and assists students with digital tools. Also serves as IELTS Buddy for additional practice sessions and study guidance.",
        "https://images.unsplash.com/photo-1500648767791-00dccÊûÅt-a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "IELTS Buddy",
        "cyan",
        "blue",
        [
            { text: "IT Support", color: "blue" },
            { text: "IELTS Buddy", color: "green" },
            { text: "Digital Tools", color: "purple" }
        ]
    ),
    createStaff(
        "Minh Anh",
        "Student Advisor",
        "Provides academic counseling and helps students choose the right courses for their goals. Excellent communication skills and deep understanding of student needs and learning paths.",
        "https://images.unsplash.com/photo-1534528741775-53994a69daeb?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&q=80",
        "Student Advisor",
        "rose",
        "pink",
        [
            { text: "Counseling", color: "blue" },
            { text: "Course Planning", color: "green" },
            { text: "Student Care", color: "purple" }
        ]
    )
];

// Course data structure
const courseData = [
    {
        id: "candy",
        name: "Level Candy",
        subtitle: "Beginner Level - IELTS Foundation",
        emoji: "üç≠",
        gradientStart: "green",
        gradientEnd: "blue",
        targetTitle: "D√†nh cho:",
        targetText: "Kh√¥ng d√†nh cho v·ª° l√≤ng, m·∫•t g·ªëc, m·∫•t cƒÉn b·∫£n. D√†nh cho nh·ªØng b·∫°n ch∆∞a l√†m quen v·ªõi IELTS, ch∆∞a ti·∫øp x√∫c nhi·ªÅu v·ªõi ti·∫øng Anh.",
        targetColor: "pink",
        objectiveTitle: "M·ª•c ti√™u:",
        objectiveText: "ƒê·ªãnh h∆∞·ªõng, gi·ªõi thi·ªáu v·ªÅ IELTS. T·∫≠p trung √¥n l·∫°i m·ªôt s·ªë ch·ªß ƒëi·ªÉm ng·ªØ ph√°p ch√≠nh, b·ªï sung t·ª´ v·ª±ng c∆° b·∫£n theo ch·ªß ƒë·ªÅ, t·ª´ v·ª±ng v·ªÅ IELTS.",
        objectiveColor: "pink",
        readingTitle: "üìö Reading & Listening",
        readingText: "L√†m quen c√°c b√†i ƒë∆°n gi·∫£n, ƒëo·∫°n vƒÉn ng·∫Øn, t·∫≠p ph√¢n t√≠ch, hi·ªÉu y√™u c·∫ßu ƒë·ªÅ b√†i",
        readingColor: "pink",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "L√†m quen v·ªõi c√¢u h·ªèi ƒë∆°n gi·∫£n, t·∫≠p trung v√†o ph√°t tri·ªÉn √Ω, ph√°t √¢m v√† ph·∫£n x·∫°",
        speakingColor: "pink",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "T·∫≠p vi·∫øt c√¢u ho√†n ch·ªânh, t·∫≠p tri·ªÉn khai √Ω. Ph√¢n bi·ªát ƒë∆∞·ª£c vƒÉn n√≥i v√† vƒÉn vi·∫øt trong IELTS",
        writingColor: "pink",
        targetScoreTitle: "üéØ Target",
        targetScoreText: "Band 2.5 - N·ªÅn t·∫£ng v·ªØng ch·∫Øc cho c√°c level ti·∫øp theo",
        targetScoreColor: "pink"
    },
    {
        id: "cookies",
        name: "Level Cookies",
        subtitle: "Elementary Level - IELTS Introduction",
        emoji: "üç™",
        gradientStart: "blue",
        gradientEnd: "indigo",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ t·ª´ng h·ªçc IELTS d∆∞·ªõi 3 th√°ng (ƒëi·ªÉm test ƒë·∫ßu v√†o t·ª´ 3.0+) ho·∫∑c h·ªçc vi√™n ƒë√£ qua level Candy.",
        targetColor: "orange",
        objectiveTitle: "M·ª•c ti√™u:",
        objectiveText: "C√°c b·∫°n b·∫Øt ƒë·∫ßu ti·∫øp x√∫c format IELTS, l√†m quen c√°c d·∫°ng b√†i ·ªü c√°c k·ªπ nƒÉng.",
        objectiveColor: "orange",
        readingTitle: "üìö Reading & Listening",
        readingText: "L√†m c√°c d·∫°ng b√†i ng·∫Øn, t·∫≠p trung v√†o ph√¢n t√≠ch b√†i v√† n√¢ng c·∫•p t·ª´ v·ª±ng",
        readingColor: "orange",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "Luy·ªán n√≥i ch·ªß ƒë·ªÅ ƒë·ªùi s·ªëng quen thu·ªôc, t·∫≠p trung v√†o ph√°t tri·ªÉn √Ω theo format IELTS",
        speakingColor: "orange",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "L√†m quen v·ªõi l√Ω thuy·∫øt Vi·∫øt: bi·ªÉu ƒë·ªì Task 1 v√† c√°c d·∫°ng b√†i Task 2",
        writingColor: "orange",
        targetScoreTitle: "üéØ Target",
        targetScoreText: "Band 3.5 - Hi·ªÉu r√µ format v√† c√°ch l√†m b√†i IELTS",
        targetScoreColor: "orange"
    },
    {
        id: "donuts",
        name: "Level Donuts",
        subtitle: "Intermediate Level - IELTS Progress",
        emoji: "üç©",
        gradientStart: "indigo",
        gradientEnd: "purple",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ t·ª´ng h·ªçc IELTS (ƒëi·ªÉm test ƒë·∫ßu v√†o t·ª´ 4.0+) ho·∫∑c h·ªçc vi√™n ƒë√£ qua level Cookies.",
        targetColor: "indigo",
        objectiveTitle: "Y√™u c·∫ßu:",
        objectiveText: "C√°c b·∫°n ƒë√£ c√≥ ki·∫øn th·ª©c c∆° b·∫£n IELTS v√† c√°c d·∫°ng b√†i (level n√†y v·∫´n √¥n l·∫°i l√Ω thuy·∫øt Vi·∫øt).",
        objectiveColor: "indigo",
        readingTitle: "üìö Reading & Listening",
        readingText: "B·∫Øt ƒë·∫ßu l√†m c√°c b√†i d√†i v√† th·ª≠ th√°ch h∆°n, ƒë·∫©y m·∫°nh k·ªπ nƒÉng ph√¢n t√≠ch b√†i",
        readingColor: "indigo",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "Luy·ªán n√≥i ch·ªß ƒë·ªÅ quen thu·ªôc, tƒÉng c∆∞·ªùng ph√°t √¢m v√† ph·∫£n x·∫°, n√¢ng cao t·ª´ v·ª±ng B1&B2",
        speakingColor: "indigo",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "Luy·ªán vi·∫øt c√°c d·∫°ng bi·ªÉu ƒë·ªì Task 1 v√† Task 2, ƒë·∫©y m·∫°nh k·ªπ nƒÉng ph√¢n t√≠ch v√† l·∫≠p d√†n √Ω",
        writingColor: "indigo",
        targetScoreTitle: "üéØ Target",
        targetScoreText: "Band 4.5 - Th√†nh th·∫°o c√°c k·ªπ nƒÉng IELTS c∆° b·∫£n",
        targetScoreColor: "indigo"
    },
    {
        id: "bagels",
        name: "Level Bagels",
        subtitle: "Upper Intermediate - IELTS Mastery",
        emoji: "ü•Ø",
        gradientStart: "purple",
        gradientEnd: "pink",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ t·ª´ng h·ªçc IELTS (ƒëi·ªÉm test ƒë·∫ßu v√†o t·ª´ 4.5+) ho·∫∑c h·ªçc vi√™n ƒë√£ qua level Donuts.",
        targetColor: "teal",
        objectiveTitle: "Y√™u c·∫ßu:",
        objectiveText: "C√°c b·∫°n ƒë√£ c√≥ n·ªÅn t·∫£ng v·ªÅ IELTS v√† mu·ªën n√¢ng cao k·ªπ nƒÉng ƒë·ªÉ ƒë·∫°t ƒëi·ªÉm cao h∆°n.",
        objectiveColor: "teal",
        readingTitle: "üìö Reading & Listening",
        readingText: "L√†m quen v·ªõi c√°c b√†i ƒë·ªçc v√† nghe d√†i, ƒë·ªô kh√≥ tƒÉng d·∫ßn, ƒë·∫©y m·∫°nh t·ª´ v·ª±ng h·ªçc thu·∫≠t",
        readingColor: "teal",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "Luy·ªán t·∫≠p v·ªõi c√°c ch·ªß ƒë·ªÅ phong ph√∫, ph√°t tri·ªÉn √Ω logic, n√¢ng cao ph√°t √¢m",
        speakingColor: "teal",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "Luy·ªán vi·∫øt theo format chu·∫©n, ƒë·∫©y m·∫°nh k·ªπ nƒÉng l·∫≠p lu·∫≠n, s·ª≠ d·ª•ng t·ª´ v·ª±ng n√¢ng cao",
        writingColor: "teal",
        targetScoreTitle: "üéØ Target",
        targetÊûÅext: "Band 5.0+ - N√¢ng cao v√† tinh ch·ªânh c√°c k·ªπ nƒÉng IELTS",
        targetScoreColor: "teal"
    },
    {
        id: "burgers",
        name: "Level Burgers",
        subtitle: "Advanced Level - IELTS Excellence",
        emoji: "üçî",
        gradientStart: "pink",
        gradientEnd: "red",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ t·ª´ng h·ªçc IELTS (ƒëi·ªÉm test ƒë·∫ßu v√†o 5.0+) ho·∫∑c h·ªçc vi√™n ƒë√£ qua level Donuts.",
        targetColor: "red",
        objectiveTitle: "Y√™u c·∫ßu:",
        objectiveText: "C√°c b·∫°n ƒë√£ n·∫Øm ch·∫Øc ki·∫øn th·ª©c IELTS v√† k·ªπ nƒÉng l√†m b√†i c∆° b·∫£n ·ªü c√°c k·ªπ nƒÉng.",
        objectiveColor: "red",
        readingTitle: "üìö Reading & Listening",
        readingText: "Luy·ªán ƒë·ªÅ thi th·∫≠t, ƒë·∫©y m·∫°nh k·ªπ nƒÉng ph√¢n t√≠ch b√†i v√† n√¢ng t·ª´ v·ª±ng, √°p l·ª±c th·ªùi gian",
        readingColor: "red",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "Luy·ªán n√≥i ch·ªß ƒë·ªÅ m·ªõi, phong ph√∫ h∆°n, ƒë·∫©y m·∫°nh ph√°t √¢m, ph·∫£n x·∫° v√† ph√°t tri·ªÉn √Ω",
        speakingColor: "red",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "Vi·∫øt th√†nh th·∫°o c√°c d·∫°ng b√†i, ƒë·∫©y m·∫°nh k·ªπ nƒÉng ph√¢n t√≠ch, √°p d·ª•ng c·∫•u tr√∫c ph·ª©c t·∫°p",
        writingColor: "red",
        targetScoreTitle: "üéØ Target",
        targetScoreText: "Band 5.5+ - ƒê·∫°t ƒëi·ªÉm cao v√† chu·∫©n b·ªã cho c√°c level n√¢ng cao",
        targetScoreColor: "red"
    },
    {
        id: "pizzas",
        name: "Level Pizzas",
        subtitle: "Expert Level - IELTS Perfection",
        emoji: "üçï",
        gradientStart: "red",
        gradientEnd: "orange",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ c√≥ n·ªÅn t·∫£ng v·ªØng ch·∫Øc v·ªÅ IELTS (ƒëi·ªÉm test ƒë·∫ßu v√†o t·ª´ 6.0+) ho·∫∑c h·ªçc vi√™n ƒë√£ qua level Burgers.",
        targetColor: "cyan",
        objectiveTitle: "Y√™u c·∫ßu:",
        objectiveText: "C√°c b·∫°n ƒë√£ quen v·ªõi format b√†i thi v√† mu·ªën t·ªëi ∆∞u h√≥a chi·∫øn l∆∞·ª£c l√†m b√†i ƒë·ªÉ ƒë·∫°t band cao h∆°n.",
        objectiveColor: "cyan",
        readingTitle: "üìö Reading & Listening",
        readingText: "Luy·ªán ƒë·ªÅ n√¢ng cao, l√†m quen v·ªõi n·ªôi dung h·ªçc thu·∫≠t chuy√™n s√¢u, ph√°t tri·ªÉn k·ªπ nƒÉng scan, skim",
        readingColor: "cyan",
        speakingTitle: "üó£Ô∏è Speaking",
        speakingText: "Luy·ªán t·∫≠p v·ªõi c√°c ch·ªß ƒë·ªÅ h·ªçc thu·∫≠t v√† tr·ª´u t∆∞·ª£ng, ƒë·∫©y m·∫°nh kh·∫£ nƒÉng ph√°t tri·ªÉn √Ω",
        speakingColor: "cyan",
        writingTitle: "‚úçÔ∏è Writing",
        writingText: "Luy·ªán vi·∫øt c√°c d·∫°ng b√†i n√¢ng cao, t·ªëi ∆∞u h√≥a b·ªë c·ª•c b√†i vi·∫øt, s·ª≠ d·ª•ng t·ª´ v·ª±ng h·ªçc thu·∫≠t",
        writingColor: "cyan",
        targetScoreTitle: "üéØ Target",
        targetScoreText: "Band 6.5+ - ƒê·∫°t ƒëi·ªÉm cao trong k·ª≥ thi IELTS",
        targetScoreColor: "cyan"
    },
    {
        id: "intensive",
        name: "Level Intensive",
        subtitle: "Elite Level - IELTS Conqueror",
        emoji: "üöÄ",
        gradientStart: "orange",
        gradientEnd: "orange",
        targetTitle: "D√†nh cho:",
        targetText: "Nh·ªØng b·∫°n ƒë√£ ƒëƒÉng k√Ω thi IELTS trong qu√Ω v√† ƒë√£ qua b√†i Mock Test t·ª´ 4.5+ tr·ªü l√™n (tu·ª≥ theo ƒë·∫ßu ra ƒë·ªÉ ch·ªçn nh·ªØng ƒë·∫ßu v√†o ph√π h·ª£p).",
        targetColor: "yellow",
        objectiveTitle: "",
        objectiveText: "",
        objectiveColor: "yellow",
        readingTitle: "üë®‚Äçüè´ Expert Coaching",
        readingText: "H·ªçc vi√™n ƒë∆∞·ª£c luy·ªán t·∫≠p v·ªõi ƒë·ªÅ thi th·∫≠t IELTS c√πng gi√°o vi√™n kinh nghi·ªám nhi·ªÅu nƒÉm",
        readingColor: "yellow",
        speakingTitle: "üìä Mock Tests",
        speakingText: "T·ªï ch·ª©c thi th·ª≠, ƒë∆∞a ra ƒë√°nh gi√° chi ti·∫øt ƒëi·ªÉm s·ªë cho 4 ti√™u ch√≠ c·ªßa IELTS",
        speakingColor: "yellow",
        writingTitle: "üíª E-learning",
        writingText: "H·ªçc vi√™n ƒë∆∞·ª£c s·ª≠ d·ª•ng h·ªá th·ªëng E-learning c·ªßa STUDIO ƒë·ªÉ tr·∫£ b√†i t·∫≠p v·ªÅ nh√†",
        writingColor: "yellow",
        targetScoreTitle: "üéØ Exam Ready",
        targetScoreText: "Chu·∫©n b·ªã t√¢m l√Ω tr∆∞·ªõc khi thi, luy·ªán t·∫≠p theo th·ªÉ th·ª©c thi th·ª±c t·∫ø",
        targetScoreColor: "yellow"
    }
];

// Initialize card rendering
document.addEventListener('DOMContentLoaded', function() {
    const renderer = new CardRenderer();
    
    // Load teacher template and render
    renderer.loadTemplate('teacher-card', 'components/teacher-card.html')
        .then(() => {
            renderer.renderCards('.teachers-grid', 'teacher-card', teacherData);
        });
    
    // Load staff template and render
    renderer.loadTemplate('teacher-card', 'components/teacher-card.html')
        .then(() => {
            renderer.renderCards('.staff-grid', 'teacher-card', staffData);
        });
    
    // Load course template and render
    renderer.loadTemplate('course-card', 'components/course-card.html')
        .then(() => {
            renderer.renderCards('.courses-grid', 'course-card', courseData);
        });
});

// Export for global use
window.CardRenderer = CardRenderer;
window.teacherData = teacherData;
window.staffData = staffData;
window.courseData = courseData;
